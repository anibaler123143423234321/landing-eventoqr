---
// Esta es la página del formulario de registro (movida desde index.astro)
---

<!DOCTYPE html>
<html lang="es">
<head>
	<meta charset="UTF-8" />
	<meta name="description" content="¡CELEBREMOS JUNTOS! Nuestro aniversario MIDAS - SAB 4 OCT con DJ GIAN" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
	<title>¡CELEBREMOS JUNTOS! - Aniversario MIDAS</title>
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
</head>
<body>
	<main class="main-container">

		<!-- Contenido principal del evento -->
		<div class="event-content">
			<!-- Contenido central -->
			<div class="center-content">
				<div class="midas-logo-center">
					<img src="/src/assets/Logotipo.svg" alt="MIDAS Logo" class="midas-logo-main">
				</div>
				<h1 class="main-title">¡CELEBREMOS JUNTOS!</h1>
				<h2 class="reserva-title">Reserva aquí</h2>

				<!-- Formulario simplificado -->
				<form id="qr-form" class="qr-form">
					<div class="form-row">
						<div class="form-group">
							<label for="dni">N.° de DNI</label>
							<input type="text" id="dni" name="dni" required
								   placeholder="87654321" maxlength="8" pattern="[0-9]{8}">
						</div>
						<div class="form-group">
							<label for="nombres">Nombre y apellido</label>
							<input type="text" id="nombres" name="nombres" required
								   placeholder="Ingresa tus nombres y apellidos" readonly>
						</div>
					</div>

					<div class="form-row">
						<div class="form-group">
							<label for="whatsapp">Número de whatsapp</label>
							<input type="tel" id="whatsapp" name="whatsapp" required
								   placeholder="987 654 321" pattern="[0-9]{9}">
						</div>
						<div class="form-group">
							<label for="sede">Sede</label>
							<input type="text" id="sede" name="sede" required
								   placeholder="Ingresa tu sede" readonly>
						</div>
					</div>

					<div class="button-row">
						<button type="button" id="clear-btn" class="clear-btn">Limpiar</button>
						<button type="submit" class="submit-btn">Genera QR</button>
					</div>
				</form>

			</div>

			<!-- Artista invitado -->
			<div class="artist-section">
				<div class="artist-logo">
					<img src="/src/assets/dj gian.png" alt="DJ GIAN" class="dj-logo">
				</div>
			</div>
		</div>

		<!-- Resultado del QR -->
		<section id="qr-result" class="qr-result" style="display: none;">
			<div class="qr-container">
				<h3>¡Tu código QR ha sido generado!</h3>
				<div id="qr-code" class="qr-display"></div>
				<button id="download-qr" class="download-btn">Descargar QR</button>
				<p class="qr-instructions">
					Presenta este código QR en el evento para tu acceso.
				</p>
			</div>
		</section>
	</main>
</body>

<style>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	body {
		font-family: 'Inter', sans-serif;
		background: url('/src/assets/fondo2.png') center/cover no-repeat;
		min-height: 100vh;
		color: white;
		overflow-x: hidden;
	}

	.main-container {
		height: 100vh;
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 1rem;
		overflow: hidden;
	}

	.logo-corner {
		position: absolute;
		top: 20px;
		left: 20px;
		z-index: 10;
	}

	.midas-logo {
		height: 80px;
		width: auto;
	}

	.event-content {
		text-align: center;
		max-width: 700px;
		width: 100%;
		z-index: 5;
	}

	.center-content {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.8rem;
	}

	.main-title {
		font-size: 3rem;
		font-weight: 900;
		line-height: 1;
		margin: 0;
		text-shadow: 0 4px 8px rgba(0,0,0,0.5);
		letter-spacing: -0.02em;
	}

	.midas-logo-center {
		display: flex;
		justify-content: center;
		margin-bottom: 0.5rem;
	}

	.midas-logo-main {
		height: 80px;
		width: auto;
		filter: drop-shadow(0 4px 8px rgba(0,0,0,0.3));
	}

	.reserva-title {
		font-size: 1.3rem;
		font-weight: 700;
		color: #FFD700;
		margin-bottom: 1rem;
		text-shadow: 0 2px 4px rgba(0,0,0,0.5);
	}

	.qr-form {
		background: rgba(0, 0, 0, 0.3);
		backdrop-filter: blur(10px);
		border-radius: 15px;
		padding: 1.5rem;
		border: 1px solid rgba(255, 255, 255, 0.1);
		box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
		max-width: 500px;
		width: 100%;
	}

	.form-group {
		display: flex;
		flex-direction: column;
		margin-bottom: 0.8rem;
	}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 0.8rem;
		margin-bottom: 0.8rem;
	}

	.button-row {
		display: grid;
		grid-template-columns: 1fr 2fr;
		gap: 0.8rem;
		margin-top: 1rem;
	}

	label {
		font-size: 0.85rem;
		font-weight: 500;
		color: white;
		margin-bottom: 0.3rem;
		text-shadow: 0 1px 2px rgba(0,0,0,0.3);
	}

	input {
		height: 2.5rem;
		padding: 0.6rem 0.8rem;
		border: 1px solid rgba(255, 255, 255, 0.3);
		border-radius: 8px;
		font-size: 0.9rem;
		background: white;
		color: #333;
		transition: all 0.3s ease;
		box-sizing: border-box;
	}

	input::placeholder {
		color: #999;
	}

	input:focus {
		outline: none;
		border-color: #667eea;
		background: white;
		transform: translateY(-1px);
		box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
	}

	input:read-only {
		background: #f5f5f5;
		border-color: #ddd;
		cursor: not-allowed;
		color: #666;
	}

	.clear-btn {
		height: 2.5rem;
		background: rgba(255, 255, 255, 0.1);
		color: white;
		border: 1px solid rgba(255, 255, 255, 0.3);
		border-radius: 8px;
		font-size: 0.9rem;
		font-weight: 600;
		cursor: pointer;
		transition: all 0.3s ease;
		backdrop-filter: blur(10px);
	}

	.clear-btn:hover {
		background: rgba(255, 255, 255, 0.2);
		border-color: rgba(255, 255, 255, 0.5);
		transform: translateY(-1px);
	}

	.submit-btn {
		height: 2.5rem;
		background: linear-gradient(135deg, #667eea, #764ba2);
		color: white;
		border: none;
		border-radius: 8px;
		font-size: 0.9rem;
		font-weight: 700;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.submit-btn:hover {
		transform: translateY(-1px);
		box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
		background: linear-gradient(135deg, #5a67d8, #667eea);
	}

	.submit-btn:active {
		transform: translateY(0);
	}

	.artist-section {
		margin-top: 1rem;
		display: flex;
		justify-content: center;
	}

	.artist-logo {
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.dj-logo {
		height: 80px;
		width: auto;
		filter: drop-shadow(0 4px 8px rgba(0,0,0,0.3));
	}

	.qr-result {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(0, 0, 0, 0.9);
		display: flex;
		align-items: center;
		justify-content: center;
		z-index: 1000;
	}

	.qr-container {
		background: white;
		padding: 2rem;
		border-radius: 15px;
		text-align: center;
		max-width: 400px;
		width: 90%;
	}

	.qr-display {
		margin: 1.5rem 0;
	}

	.download-btn {
		background: linear-gradient(135deg, #667eea, #764ba2);
		color: white;
		border: none;
		padding: 0.75rem 1.5rem;
		border-radius: 8px;
		font-weight: 600;
		cursor: pointer;
		margin-top: 1rem;
	}

	.qr-instructions {
		margin-top: 1rem;
		color: #666;
		font-size: 0.9rem;
	}

	/* Responsive */
	@media (max-width: 768px) {
		.main-container {
			padding: 0.5rem;
		}

		.logo-corner {
			top: 10px;
			left: 10px;
		}

		.midas-logo {
			height: 50px;
		}

		.main-title {
			font-size: 2rem;
		}

		.midas-logo-main {
			height: 60px;
		}

		.qr-form {
			padding: 1rem;
		}

		.form-row {
			grid-template-columns: 1fr;
			gap: 0.8rem;
		}

		.button-row {
			grid-template-columns: 1fr;
			gap: 0.8rem;
		}

		.dj-logo {
			height: 60px;
		}

		.center-content {
			gap: 0.5rem;
		}
	}
</style>

<script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.3/build/qrcode.min.js"></script>
<script>
	document.addEventListener('DOMContentLoaded', function() {
		const form = document.getElementById('qr-form');
		const dniInput = document.getElementById('dni');
		const nombresInput = document.getElementById('nombres');
		const sedeInput = document.getElementById('sede');
		const clearBtn = document.getElementById('clear-btn');
		const qrResult = document.getElementById('qr-result');
		const qrCodeDiv = document.getElementById('qr-code');
		const downloadBtn = document.getElementById('download-qr');
		let currentQRDataURL = '';

		// Buscar usuario por DNI
		if (dniInput) {
			dniInput.addEventListener('blur', async function() {
				const dni = this.value.trim();
				if (dni.length === 8) {
					await buscarUsuarioPorDNI(dni);
				}
			});

			dniInput.addEventListener('input', function() {
				// Limpiar campos si se modifica el DNI
				if (this.value.length < 8) {
					nombresInput.value = '';
					sedeInput.value = '';
				}
			});
		}

		// Botón limpiar
		if (clearBtn) {
			clearBtn.addEventListener('click', function() {
				dniInput.value = '';
				nombresInput.value = '';
				sedeInput.value = '';
				document.getElementById('whatsapp').value = '';
				dniInput.focus();
			});
		}

		// Buscar usuario en el backend CRM-FINAL
		async function buscarUsuarioPorDNI(dni) {
			try {
				showLoading(true, 'Buscando usuario...');

				// Llamada a tu backend CRM-FINAL
				const response = await fetch(`https://apisozarusac.com/BackendJava/api/usuarios/buscar-por-dni/${dni}`, {
					method: 'GET',
					headers: {
						'Content-Type': 'application/json',
					}
				});

				if (response.ok) {
					const usuario = await response.json();

					// Llenar los campos con los datos del usuario
					nombresInput.value = `${usuario.nombres} ${usuario.apellidos}`;
					sedeInput.value = usuario.sede;

					showSuccessMessage('Usuario encontrado en la base de datos');
				} else {
					// Usuario no encontrado
					nombresInput.value = '';
					sedeInput.value = '';
					showErrorMessage('DNI no encontrado en la base de datos. Verifica el número ingresado.');
				}
			} catch (error) {
				console.error('Error al buscar usuario:', error);
				showErrorMessage('Error al conectar con la base de datos. Intenta nuevamente.');
			} finally {
				showLoading(false);
			}
		}

		// Envío del formulario
		if (form) {
			form.addEventListener('submit', async function(e) {
				e.preventDefault();

				const dni = dniInput.value.trim();
				const nombres = nombresInput.value.trim();
				const whatsapp = document.getElementById('whatsapp').value.trim();
				const sede = sedeInput.value.trim();

				// Validaciones
				if (!dni || dni.length !== 8) {
					showErrorMessage('Ingresa un DNI válido de 8 dígitos');
					return;
				}

				if (!nombres) {
					showErrorMessage('El nombre y apellido son requeridos. Verifica que el DNI sea correcto.');
					return;
				}

				if (!whatsapp || whatsapp.length !== 9) {
					showErrorMessage('Ingresa un número de WhatsApp válido de 9 dígitos');
					return;
				}

				if (!sede) {
					showErrorMessage('La sede es requerida. Verifica que el DNI sea correcto.');
					return;
				}

				try {
					showLoading(true, 'Generando reserva...');

					// Crear objeto para enviar al backend
					const reservaData = {
						dni: dni,
						nombresApellidos: nombres,
						whatsapp: whatsapp,
						sede: sede
					};

					// Enviar al backend
					const response = await fetch('https://apisozarusac.com/BackendJava/api/evento-qr/create', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify(reservaData)
					});

					if (!response.ok) {
						const errorData = await response.json();
						throw new Error(errorData.message || 'Error al crear la reserva');
					}

					const result = await response.json();

					// Generar código QR visual con los datos del backend
					const qrData = result.data.qrData;
					const qrDataURL = await window.QRCode.toDataURL(qrData, {
						width: 300,
						margin: 2,
						color: {
							dark: '#000000',
							light: '#FFFFFF'
						}
					});

					// Mostrar el QR (crear modal)
					mostrarQR(qrDataURL, result.data);
					currentQRDataURL = qrDataURL;

					showSuccessMessage('¡Reserva exitosa! Tu código QR ha sido generado.');

				} catch (error) {
					console.error('Error:', error);
					showErrorMessage(error.message || 'Error al generar la reserva. Por favor, intenta nuevamente.');
				} finally {
					showLoading(false);
				}
			});
		}

		// Función para mostrar el QR en modal
		function mostrarQR(qrDataURL, reservaData) {
			// Crear modal
			const modal = document.createElement('div');
			modal.style.cssText = `
				position: fixed;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: rgba(0, 0, 0, 0.9);
				display: flex;
				align-items: center;
				justify-content: center;
				z-index: 1000;
			`;

			modal.innerHTML = `
				<div style="
					background: white;
					padding: 2rem;
					border-radius: 15px;
					text-align: center;
					max-width: 400px;
					width: 90%;
				">
					<h3 style="color: #333; margin-bottom: 1rem;">¡Tu reserva ha sido confirmada!</h3>
					<img src="${qrDataURL}" alt="Código QR" style="max-width: 100%; height: auto; margin: 1rem 0;">
					<p style="color: #666; font-size: 0.9rem; margin-bottom: 1rem;">
						<strong>Nombre:</strong> ${reservaData.nombres}<br>
						<strong>DNI:</strong> ${reservaData.dni}<br>
						<strong>Sede:</strong> ${reservaData.sede}
					</p>
					<div style="display: flex; gap: 1rem; justify-content: center;">
						<button id="download-qr" style="
							background: linear-gradient(135deg, #667eea, #764ba2);
							color: white;
							border: none;
							padding: 0.75rem 1.5rem;
							border-radius: 8px;
							font-weight: 600;
							cursor: pointer;
						">Descargar QR</button>
						<button onclick="this.closest('div').parentElement.remove()" style="
							background: #ccc;
							color: #333;
							border: none;
							padding: 0.75rem 1.5rem;
							border-radius: 8px;
							font-weight: 600;
							cursor: pointer;
						">Cerrar</button>
					</div>
					<p style="color: #666; font-size: 0.8rem; margin-top: 1rem;">
						Presenta este código QR en el evento para tu acceso.
					</p>
				</div>
			`;

			document.body.appendChild(modal);

			// Agregar evento de descarga
			const downloadBtn = modal.querySelector('#download-qr');
			if (downloadBtn) {
				downloadBtn.addEventListener('click', function() {
					const link = document.createElement('a');
					link.download = `evento-midas-${reservaData.dni}.png`;
					link.href = qrDataURL;
					link.click();
				});
			}
		}

		// Función de loading
		function showLoading(show, message = 'Procesando...') {
			const submitBtn = form?.querySelector('button[type="submit"]');
			if (submitBtn) {
				if (show) {
					submitBtn.disabled = true;
					submitBtn.innerHTML = `<span style="margin-right: 0.5rem;">⏳</span> ${message}`;
				} else {
					submitBtn.disabled = false;
					submitBtn.innerHTML = 'Genera QR';
				}
			}
		}

		function showSuccessMessage(message) {
			showMessage(message, 'success');
		}

		function showErrorMessage(message) {
			showMessage(message, 'error');
		}

		function showMessage(message, type) {
			// Remover mensaje anterior si existe
			const existingMessage = document.querySelector('.message-alert');
			if (existingMessage) {
				existingMessage.remove();
			}

			// Crear nuevo mensaje
			const messageDiv = document.createElement('div');
			messageDiv.className = `message-alert message-${type}`;
			messageDiv.innerHTML = `
				<span>${message}</span>
				<button onclick="this.parentElement.remove()" style="
					background: none;
					border: none;
					color: inherit;
					font-size: 1.2rem;
					cursor: pointer;
					margin-left: 1rem;
				">×</button>
			`;

			// Estilos del mensaje
			messageDiv.style.cssText = `
				position: fixed;
				top: 20px;
				right: 20px;
				padding: 1rem 1.5rem;
				border-radius: 8px;
				color: white;
				font-weight: 500;
				z-index: 1000;
				max-width: 400px;
				box-shadow: 0 4px 12px rgba(0,0,0,0.15);
				display: flex;
				align-items: center;
				justify-content: space-between;
				animation: slideIn 0.3s ease-out;
				${type === 'success' ? 'background: linear-gradient(135deg, #10b981, #059669);' : 'background: linear-gradient(135deg, #ef4444, #dc2626);'}
			`;

			// Agregar animación CSS
			if (!document.querySelector('#message-styles')) {
				const style = document.createElement('style');
				style.id = 'message-styles';
				style.textContent = `
					@keyframes slideIn {
						from { transform: translateX(100%); opacity: 0; }
						to { transform: translateX(0); opacity: 1; }
					}
				`;
				document.head.appendChild(style);
			}

			document.body.appendChild(messageDiv);

			// Auto-remover después de 5 segundos
			setTimeout(() => {
				if (messageDiv.parentElement) {
					messageDiv.remove();
				}
			}, 5000);
		}
	});
</script>
